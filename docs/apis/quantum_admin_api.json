{
  "openapi": "3.0.0",
  "paths": {
    "/api/preview": {
      "get": {
        "operationId": "ApiController_preview",
        "parameters": [
          {
            "name": "companyName",
            "required": false,
            "in": "query",
            "schema": {
              "example": "konneqt",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "api"
        ],
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "No summary"
      }
    },
    "/api/detail/{apikey}": {
      "get": {
        "operationId": "ApiController_detail",
        "parameters": [
          {
            "name": "apikey",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "api"
        ],
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "No summary"
      }
    },
    "/api": {
      "get": {
        "operationId": "ApiController_allAPIs",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "api"
        ],
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "No summary"
      },
      "post": {
        "operationId": "ApiController_save",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateApiDTO"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "api"
        ],
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "No summary"
      }
    },
    "/api/page": {
      "get": {
        "operationId": "ApiController_pageListApis",
        "parameters": [
          {
            "name": "page",
            "required": true,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "pageSize",
            "required": true,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "apiName",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "api"
        ],
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "No summary"
      }
    },
    "/api/{apikey}": {
      "delete": {
        "operationId": "ApiController_deleteApi",
        "parameters": [
          {
            "name": "apikey",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "api"
        ],
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "No summary"
      },
      "put": {
        "operationId": "ApiController_updateApi",
        "parameters": [
          {
            "name": "apikey",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateApiDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "api"
        ],
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "No summary"
      }
    },
    "/api-product/preview": {
      "get": {
        "operationId": "ApiProductController_preview",
        "parameters": [
          {
            "name": "companyName",
            "required": false,
            "in": "query",
            "schema": {
              "example": "konneqt",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "api-product"
        ],
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "No summary"
      }
    },
    "/api-product/detail/{apikey}": {
      "get": {
        "operationId": "ApiProductController_detailApiProduct",
        "parameters": [
          {
            "name": "apikey",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "api-product"
        ],
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "No summary"
      }
    },
    "/api-product/page": {
      "get": {
        "operationId": "ApiProductController_pageListApiProducts",
        "parameters": [
          {
            "name": "page",
            "required": true,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "pageSize",
            "required": true,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "apiName",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "api-product"
        ],
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "No summary"
      }
    },
    "/api-product/{apikey}": {
      "delete": {
        "operationId": "ApiProductController_deleteApiProduct",
        "parameters": [
          {
            "name": "apikey",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "api-product"
        ],
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "No summary"
      },
      "put": {
        "operationId": "ApiProductController_updateApiProduct",
        "parameters": [
          {
            "name": "apikey",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateApiProductDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "api-product"
        ],
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "No summary"
      }
    },
    "/api-product": {
      "post": {
        "operationId": "ApiProductController_save",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateApiProductDTO"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "api-product"
        ],
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "No summary"
      }
    },
    "/api-product/attach-method": {
      "post": {
        "operationId": "ApiProductController_attachedMethods",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AttachMethodDTO"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "api-product"
        ],
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "No summary"
      }
    },
    "/api-product/list-methods-of-api-keys": {
      "get": {
        "operationId": "ApiProductController_listMethodsOfApiKeys",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "api-product"
        ],
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "No summary"
      }
    },
    "/api-gateway/update/{id}": {
      "patch": {
        "operationId": "ApiGatewayController_updateStatus",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "api-gateway"
        ],
        "summary": "No summary"
      }
    },
    "/api-gateway": {
      "get": {
        "operationId": "ApiGatewayController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "api-gateway"
        ],
        "summary": "No summary"
      },
      "post": {
        "operationId": "ApiGatewayController_save",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateApiGatewayDTO"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "api-gateway"
        ],
        "summary": "No summary"
      }
    },
    "/api-method/page": {
      "get": {
        "operationId": "ApiMethodController_pageListApiMethods",
        "parameters": [
          {
            "name": "apiKey",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": true,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "pageSize",
            "required": true,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "path",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "httpMethod",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "api-method"
        ],
        "summary": "No summary"
      }
    },
    "/api-method/many": {
      "post": {
        "operationId": "ApiMethodController_saveMany",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ManyApiMethodsDTO"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "api-method"
        ],
        "summary": "No summary"
      },
      "put": {
        "operationId": "ApiMethodController_updateMany",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ManyApiMethodsDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "api-method"
        ],
        "summary": "No summary"
      },
      "delete": {
        "operationId": "ApiMethodController_deleteMany",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ManyApiMethodsDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "api-method"
        ],
        "summary": "No summary"
      }
    },
    "/user/customer": {
      "post": {
        "operationId": "UserController_createCustomer",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserDTO"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "user"
        ],
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "No summary"
      }
    },
    "/user/login": {
      "post": {
        "operationId": "UserController_login",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestLoginDTO"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "user"
        ],
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "No summary"
      }
    },
    "/user/get-user-id-by-qiam-id/{qiamId}": {
      "get": {
        "operationId": "UserController_getUserIdByQiamId",
        "parameters": [
          {
            "name": "qiamId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "user"
        ],
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "No summary"
      }
    },
    "/user/page-customer": {
      "get": {
        "operationId": "UserController_pageListApis",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "pageSize",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "username",
            "required": false,
            "in": "query",
            "schema": {
              "example": "",
              "type": "string"
            }
          },
          {
            "name": "name",
            "required": false,
            "in": "query",
            "schema": {
              "example": "",
              "type": "string"
            }
          },
          {
            "name": "email",
            "required": false,
            "in": "query",
            "schema": {
              "example": "",
              "type": "string"
            }
          },
          {
            "name": "companyName",
            "required": false,
            "in": "query",
            "schema": {
              "example": "",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "user"
        ],
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "No summary"
      }
    },
    "/user/{id}": {
      "get": {
        "operationId": "UserController_findUserById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "user"
        ],
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "No summary"
      }
    },
    "/user/active/{id}": {
      "post": {
        "operationId": "UserController_activeUser",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActiveUserDTO"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "user"
        ],
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "No summary"
      }
    },
    "/company": {
      "get": {
        "operationId": "CompanyController_findCompanyWithSettings",
        "parameters": [
          {
            "name": "name",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "company"
        ],
        "summary": "No summary"
      }
    },
    "/company/uisettings": {
      "get": {
        "operationId": "CompanyController_findUiSettingsByCompanyName",
        "parameters": [
          {
            "name": "name",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "company"
        ],
        "summary": "No summary"
      }
    },
    "/company/variablesettings": {
      "get": {
        "operationId": "CompanyController_findVariableSettingsByCompanyName",
        "parameters": [
          {
            "name": "name",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "company"
        ],
        "summary": "No summary"
      }
    },
    "/invoices/email/{email}": {
      "get": {
        "operationId": "InvoiceController_getInvoicesByUserEmail",
        "parameters": [
          {
            "name": "email",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filterDate",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "invoices"
        ],
        "summary": "No summary"
      }
    },
    "/invoices/{id}": {
      "get": {
        "operationId": "InvoiceController_getInvoiceRequestApisByInvoiceId",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "invoices"
        ],
        "summary": "No summary"
      }
    },
    "/invoices/all": {
      "get": {
        "operationId": "InvoiceController_getAllInvoices",
        "parameters": [
          {
            "name": "filterDate",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "username",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "invoices"
        ],
        "summary": "No summary"
      }
    },
    "/krakend/convert": {
      "post": {
        "operationId": "KrakenDController_convertKrakenDFile",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "summary": "No summary"
      }
    },
    "/person": {
      "get": {
        "operationId": "PersonController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "person"
        ],
        "summary": "No summary"
      }
    },
    "/person/{id}": {
      "get": {
        "operationId": "PersonController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "person"
        ],
        "summary": "No summary"
      }
    },
    "/plan-contract": {
      "post": {
        "operationId": "PlanContractController_createPlanContract",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePlanContractDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "plan-contract"
        ],
        "summary": "No summary"
      }
    },
    "/plan-contract/{id}": {
      "put": {
        "operationId": "PlanContractController_updatePlanContract",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePlanContractDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "plan-contract"
        ],
        "summary": "No summary"
      },
      "delete": {
        "operationId": "PlanContractController_deletePlanContract",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "plan-contract"
        ],
        "summary": "No summary"
      }
    },
    "/plan/page": {
      "get": {
        "operationId": "PlanController_pageListApis",
        "parameters": [
          {
            "name": "page",
            "required": true,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "pageSize",
            "required": true,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "planName",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "plan"
        ],
        "summary": "No summary"
      }
    },
    "/plan/detail-by-key/{key}": {
      "get": {
        "operationId": "PlanController_detail",
        "parameters": [
          {
            "name": "key",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "plan"
        ],
        "summary": "No summary"
      }
    },
    "/plan/apikey/{apikey}": {
      "get": {
        "operationId": "PlanController_apikey",
        "parameters": [
          {
            "name": "apikey",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "plan"
        ],
        "summary": "No summary"
      }
    },
    "/plan/create-with-contract": {
      "post": {
        "operationId": "PlanController_createPlanWithContract",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePlanWithContractDTO"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "plan"
        ],
        "summary": "No summary"
      }
    },
    "/plan/{id}": {
      "delete": {
        "operationId": "PlanController_deletePlan",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "plan"
        ],
        "summary": "No summary"
      },
      "put": {
        "operationId": "PlanController_updatePlan",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PlanDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "plan"
        ],
        "summary": "No summary"
      }
    },
    "/plan": {
      "post": {
        "operationId": "PlanController_createPlan",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePlanDTO"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "plan"
        ],
        "summary": "No summary"
      }
    },
    "/subscription": {
      "post": {
        "operationId": "SubscriptionController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSubscriptionDTO"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "subscription"
        ],
        "summary": "No summary"
      }
    },
    "/subscription/{email}": {
      "get": {
        "operationId": "SubscriptionController_listByEmails",
        "parameters": [
          {
            "name": "email",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "subscription"
        ],
        "summary": "No summary"
      }
    },
    "/subscription/{username}": {
      "get": {
        "operationId": "SubscriptionController_list",
        "parameters": [
          {
            "name": "username",
            "required": false,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "subscription"
        ],
        "summary": "No summary"
      }
    },
    "/deployment-unit/api": {
      "post": {
        "operationId": "DeploymentUnitController_saveWithAPI",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDeploymentUnitDTO"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "deployment-unit"
        ],
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "No summary"
      }
    },
    "/deployment-unit/page": {
      "get": {
        "operationId": "DeploymentUnitController_pageListApis",
        "parameters": [
          {
            "name": "page",
            "required": true,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "pageSize",
            "required": true,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "deploymentUnitName",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "deployment-unit"
        ],
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "No summary"
      }
    },
    "/deployment-unit/details/deployment-unit/{deployment}-unit-key": {
      "get": {
        "operationId": "DeploymentUnitController_findByApiKey",
        "parameters": [
          {
            "name": "deployment-unit-key",
            "required": true,
            "in": "path",
            "schema": {
              "example": "deployment-unit-1",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "deployment-unit"
        ],
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "No summary"
      }
    },
    "/deployment-unit": {
      "put": {
        "operationId": "DeploymentUnitController_edit",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditDeploymentUnitDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "deployment-unit"
        ],
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "No summary"
      }
    },
    "/deployment-unit/gateway/{key}": {
      "put": {
        "operationId": "DeploymentUnitController_editGateway",
        "parameters": [
          {
            "name": "key",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditGatewayDeploymentUnitDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "deployment-unit"
        ],
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "No summary"
      }
    },
    "/deployment-unit/ci/{key}": {
      "put": {
        "operationId": "DeploymentUnitController_editCi",
        "parameters": [
          {
            "name": "key",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditCiDeploymentUnitDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "deployment-unit"
        ],
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "No summary"
      }
    },
    "/dashboard": {
      "get": {
        "operationId": "DashboardController_listDashboardAdmin",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "dashboard"
        ],
        "summary": "No summary"
      }
    },
    "/dashboard/{email}": {
      "get": {
        "operationId": "DashboardController_listDashboardByUser",
        "parameters": [
          {
            "name": "email",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "dashboard"
        ],
        "summary": "No summary"
      }
    },
    "/file/CDN": {
      "post": {
        "operationId": "FileController_save",
        "parameters": [],
        "requestBody": {
          "required": true,
          "description": "Arquivo a ser enviado",
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "file"
        ],
        "summary": "No summary"
      }
    },
    "/gateway/{apiKey}": {
      "put": {
        "operationId": "GatewayController_saveFileByApiKey",
        "parameters": [
          {
            "name": "apiKey",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GatewayFileDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "gateway"
        ],
        "summary": "No summary"
      }
    },
    "/gateway/detail/{apiKey}": {
      "get": {
        "operationId": "GatewayController_findByApiKey",
        "parameters": [
          {
            "name": "apiKey",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "gateway"
        ],
        "summary": "No summary"
      }
    },
    "/gateway/file-detail/{apiKey}": {
      "get": {
        "operationId": "GatewayController_findFileDetailByApiKey",
        "parameters": [
          {
            "name": "apiKey",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "gateway"
        ],
        "summary": "No summary"
      }
    }
  },
  "info": {
    "title": "Quantum Admin API",
    "description": "Api Docs for resources of Quantum Admin",
    "version": "1.0",
    "contact": {}
  },
  "tags": [],
  "servers": [],
  "components": {
    "securitySchemes": {
      "access-token": {
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "type": "http",
        "description": "Entre com um token JWT para autenticação"
      }
    },
    "schemas": {
      "UpdateApiDTO": {
        "type": "object",
        "properties": {
          "apiKeyName": {
            "type": "string",
            "description": "Unique name for your API",
            "example": "api-key-name"
          },
          "displayName": {
            "type": "string",
            "description": "Display name for your API",
            "example": "API Name"
          },
          "type": {
            "type": "string",
            "description": "Type of your API",
            "example": "PUBLIC"
          },
          "sandboxUrl": {
            "type": "string",
            "description": "Sandbox URL for your API",
            "example": "https://sandbox.api.com"
          },
          "productionUrl": {
            "type": "string",
            "description": "Production URL for your API",
            "example": "https://api.com"
          },
          "devPortalUrl": {
            "type": "string",
            "description": "Production URL for your API",
            "example": "https://api.com"
          },
          "apiLogo": {
            "type": "string",
            "description": "Logo for your API",
            "example": "https://logo.com"
          },
          "description": {
            "type": "string",
            "description": "Description for your API",
            "example": "API Description"
          },
          "mainDocs": {
            "type": "string",
            "description": "Main Docs for your API",
            "example": "https://docs.api.com"
          },
          "termsOfService": {
            "type": "string",
            "description": "Terms of Service for your API",
            "example": "https://terms.api.com"
          },
          "swaggerSource": {
            "type": "string",
            "description": "Swagger source for your API",
            "example": "https://terms.api.com"
          },
          "planId": {
            "type": "string",
            "description": "Plan ID",
            "example": "123456789"
          }
        },
        "required": [
          "apiKeyName",
          "displayName",
          "type",
          "sandboxUrl",
          "productionUrl",
          "devPortalUrl",
          "apiLogo",
          "description",
          "mainDocs",
          "termsOfService",
          "swaggerSource",
          "planId"
        ]
      },
      "CreateApiDTO": {
        "type": "object",
        "properties": {
          "keyName": {
            "type": "string",
            "description": "Unique name for your API",
            "example": "api-key-name"
          },
          "displayName": {
            "type": "string",
            "description": "Display name for your API",
            "example": "API Name"
          },
          "type": {
            "type": "string",
            "description": "Type of your API",
            "example": "PUBLIC"
          },
          "sandboxUrl": {
            "type": "string",
            "description": "Sandbox URL for your API",
            "example": "https://sandbox.api.com"
          },
          "productionUrl": {
            "type": "string",
            "description": "Production URL for your API",
            "example": "https://api.com"
          },
          "devPortalUrl": {
            "type": "string",
            "description": "Production URL for your API",
            "example": "https://api.com"
          },
          "apiLogo": {
            "type": "string",
            "description": "Logo for your API",
            "example": "https://logo.com"
          },
          "description": {
            "type": "string",
            "description": "Description for your API",
            "example": "API Description"
          },
          "mainDocs": {
            "type": "string",
            "description": "Main Docs for your API",
            "example": "https://docs.api.com"
          },
          "termsOfService": {
            "type": "string",
            "description": "Terms of Service for your API",
            "example": "https://terms.api.com"
          },
          "swaggerSource": {
            "type": "object",
            "description": "Terms of Service for your API",
            "example": "https://terms.api.com"
          },
          "status": {
            "type": "string",
            "description": "Status of your API",
            "example": {
              "DRAFT": "DRAFT",
              "READY": "READY"
            }
          },
          "planId": {
            "type": "string",
            "description": "Plan ID",
            "example": "123456789"
          },
          "apiOriginType": {
            "type": "string",
            "description": "Origin of your API",
            "example": {
              "FROM_SCRATCH": "FROM_SCRATCH",
              "FROM_EXISTING": "FROM_EXISTING"
            }
          }
        },
        "required": [
          "keyName",
          "displayName",
          "type",
          "sandboxUrl",
          "productionUrl",
          "devPortalUrl",
          "apiLogo",
          "description",
          "mainDocs",
          "termsOfService",
          "swaggerSource",
          "status",
          "planId",
          "apiOriginType"
        ]
      },
      "UpdateApiProductDTO": {
        "type": "object",
        "properties": {
          "apiKeyName": {
            "type": "string",
            "description": "Unique name for your API",
            "example": "api-key-name"
          },
          "displayName": {
            "type": "string",
            "description": "Display name for your API",
            "example": "API Name"
          },
          "type": {
            "type": "string",
            "description": "Type of your API",
            "example": "PUBLIC"
          },
          "sandboxUrl": {
            "type": "string",
            "description": "Sandbox URL for your API",
            "example": "https://sandbox.api.com"
          },
          "productionUrl": {
            "type": "string",
            "description": "Production URL for your API",
            "example": "https://api.com"
          },
          "devPortalUrl": {
            "type": "string",
            "description": "Production URL for your API",
            "example": "https://api.com"
          },
          "apiLogo": {
            "type": "string",
            "description": "Logo for your API",
            "example": "https://logo.com"
          },
          "description": {
            "type": "string",
            "description": "Description for your API",
            "example": "API Description"
          },
          "mainDocs": {
            "type": "string",
            "description": "Main Docs for your API",
            "example": "https://docs.api.com"
          },
          "termsOfService": {
            "type": "string",
            "description": "Terms of Service for your API",
            "example": "https://terms.api.com"
          },
          "swaggerSource": {
            "type": "string",
            "description": "Swagger source for your API",
            "example": "https://terms.api.com"
          },
          "planId": {
            "type": "string",
            "description": "Plan ID",
            "example": "123456789"
          }
        },
        "required": [
          "apiKeyName",
          "displayName",
          "type",
          "sandboxUrl",
          "productionUrl",
          "devPortalUrl",
          "apiLogo",
          "description",
          "mainDocs",
          "termsOfService",
          "swaggerSource",
          "planId"
        ]
      },
      "CreateApiProductDTO": {
        "type": "object",
        "properties": {
          "keyName": {
            "type": "string",
            "description": "Unique name for your API",
            "example": "api-key-name"
          },
          "displayName": {
            "type": "string",
            "description": "Display name for your API",
            "example": "API Name"
          },
          "type": {
            "type": "string",
            "description": "Type of your API",
            "example": "PUBLIC"
          },
          "sandboxUrl": {
            "type": "string",
            "description": "Sandbox URL for your API",
            "example": "https://sandbox.api.com"
          },
          "productionUrl": {
            "type": "string",
            "description": "Production URL for your API",
            "example": "https://api.com"
          },
          "devPortalUrl": {
            "type": "string",
            "description": "Production URL for your API",
            "example": "https://api.com"
          },
          "apiLogo": {
            "type": "string",
            "description": "Logo for your API",
            "example": "https://logo.com"
          },
          "description": {
            "type": "string",
            "description": "Description for your API",
            "example": "API Description"
          },
          "mainDocs": {
            "type": "string",
            "description": "Main Docs for your API",
            "example": "https://docs.api.com"
          },
          "termsOfService": {
            "type": "string",
            "description": "Terms of Service for your API",
            "example": "https://terms.api.com"
          },
          "swaggerSource": {
            "type": "object",
            "description": "Terms of Service for your API",
            "example": "https://terms.api.com"
          },
          "status": {
            "type": "string",
            "description": "Status of your API",
            "example": {
              "DRAFT": "DRAFT",
              "READY": "READY"
            }
          },
          "planId": {
            "type": "string",
            "description": "Plan ID",
            "example": "123456789"
          }
        },
        "required": [
          "keyName",
          "displayName",
          "type",
          "sandboxUrl",
          "productionUrl",
          "devPortalUrl",
          "apiLogo",
          "description",
          "mainDocs",
          "termsOfService",
          "swaggerSource",
          "status",
          "planId"
        ]
      },
      "AttachMethodDTO": {
        "type": "object",
        "properties": {
          "apiProductKeys": {
            "type": "string",
            "description": "API Key",
            "example": "google-api-key"
          },
          "methodsId": {
            "description": "API Methods",
            "example": "Google API",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "swaggerSource": {
            "type": "object",
            "description": "Swagger",
            "example": "swagger"
          }
        },
        "required": [
          "apiProductKeys",
          "methodsId",
          "swaggerSource"
        ]
      },
      "CreateApiGatewayDTO": {
        "type": "object",
        "properties": {}
      },
      "ManyApiMethodsDTO": {
        "type": "object",
        "properties": {
          "apiKey": {
            "type": "string",
            "description": "API Key",
            "example": "api-key-name"
          },
          "methods": {
            "description": "API Methods",
            "example": "[{path: 'api/v1/users', httpMethod: 'GET', techDetails: 'https://swagger.io/specification/', openApiDetails: 'https://petstore.swagger.io/v2/swagger.json'}]",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "apiKey",
          "methods"
        ]
      },
      "CreateUserDTO": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "Email of the user",
            "example": "johndoe@campany.com"
          },
          "companyName": {
            "type": "string",
            "description": "Company name of the user",
            "example": "Company name"
          },
          "password": {
            "type": "string",
            "description": "Password of the user",
            "example": "Password"
          },
          "acceptedTerms": {
            "type": "boolean",
            "description": "Accept terms of the user",
            "example": "Accept terms"
          },
          "firstName": {
            "type": "string",
            "description": "First name of the user",
            "example": "First name"
          },
          "lastName": {
            "type": "string",
            "description": "Last name of the user",
            "example": "Last name"
          },
          "username": {
            "type": "string",
            "description": "Username of the user",
            "example": "johndoe"
          },
          "phoneNumber": {
            "type": "string",
            "description": "Phone number of the user",
            "example": "123456789"
          },
          "phoneCountryCode": {
            "type": "string",
            "description": "Country code of the user",
            "example": "+55"
          },
          "phoneAreaCode": {
            "type": "string",
            "description": "Area code of the user",
            "example": "81"
          }
        },
        "required": [
          "email",
          "companyName",
          "password",
          "acceptedTerms",
          "firstName",
          "lastName",
          "username",
          "phoneNumber",
          "phoneCountryCode",
          "phoneAreaCode"
        ]
      },
      "RequestLoginDTO": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "Email",
            "example": "johndoe@gmail.com"
          }
        },
        "required": [
          "email"
        ]
      },
      "ActiveUserDTO": {
        "type": "object",
        "properties": {
          "active": {
            "type": "boolean",
            "description": "Active user",
            "example": true
          }
        },
        "required": [
          "active"
        ]
      },
      "CreatePlanContractDto": {
        "type": "object",
        "properties": {
          "initialDate": {
            "format": "date-time",
            "type": "string",
            "description": "Plan initial date",
            "example": "2025-02-28T16:50:05.289Z"
          },
          "finalDate": {
            "format": "date-time",
            "type": "string",
            "description": "Plan final date",
            "example": "2025-02-28T16:50:05.289Z"
          },
          "title": {
            "type": "string",
            "description": "Plan title",
            "example": "Free Plan"
          },
          "requestLimit": {
            "type": "number",
            "description": "10",
            "example": "Request limit"
          },
          "requestPrice": {
            "type": "number",
            "description": "5",
            "example": "Request price"
          },
          "extraPackageRequest": {
            "type": "number",
            "description": "5",
            "example": "Extra package request"
          },
          "extraPackagePrice": {
            "type": "number",
            "description": "5",
            "example": "Extra package price"
          },
          "billType": {
            "type": "string",
            "description": "Billing type",
            "example": "FREE"
          },
          "chargeType": {
            "type": "string",
            "description": "Charge type",
            "example": "MONTHLY"
          },
          "rateLimitRequests": {
            "type": "number",
            "description": "10",
            "example": "Rate limit requests"
          },
          "rateLimitPeriod": {
            "type": "number",
            "description": "10",
            "example": "Rate limit period"
          },
          "isActive": {
            "type": "boolean",
            "description": "Plan active",
            "example": true
          },
          "planId": {
            "type": "string",
            "description": "Plan Id",
            "example": true
          }
        },
        "required": [
          "initialDate",
          "finalDate",
          "title",
          "requestLimit",
          "requestPrice",
          "extraPackageRequest",
          "extraPackagePrice",
          "billType",
          "chargeType",
          "rateLimitRequests",
          "rateLimitPeriod",
          "isActive",
          "planId"
        ]
      },
      "UpdatePlanContractDto": {
        "type": "object",
        "properties": {
          "planId": {
            "type": "string",
            "description": "Plan id",
            "example": "1234567890"
          },
          "initialDate": {
            "format": "date-time",
            "type": "string",
            "description": "Plan initial date",
            "example": "2025-02-28T16:50:05.297Z"
          },
          "finalDate": {
            "format": "date-time",
            "type": "string",
            "description": "Plan final date",
            "example": "2025-02-28T16:50:05.297Z"
          },
          "title": {
            "type": "string",
            "description": "Plan title",
            "example": "Free Plan"
          },
          "requestLimit": {
            "type": "number",
            "description": "10",
            "example": "Request limit"
          },
          "requestPrice": {
            "type": "number",
            "description": "5",
            "example": "Request price"
          },
          "extraPackageRequest": {
            "type": "number",
            "description": "5",
            "example": "Extra package request"
          },
          "extraPackagePrice": {
            "type": "number",
            "description": "5",
            "example": "Extra package price"
          },
          "billType": {
            "type": "string",
            "description": "Billing type",
            "example": "FREE"
          },
          "chargeType": {
            "type": "string",
            "description": "Charge type",
            "example": "MONTHLY"
          },
          "rateLimitRequests": {
            "type": "number",
            "description": "10",
            "example": "Rate limit requests"
          },
          "rateLimitPeriod": {
            "type": "number",
            "description": "10",
            "example": "Rate limit period"
          },
          "isActive": {
            "type": "boolean",
            "description": "Plan active",
            "example": true
          }
        },
        "required": [
          "planId",
          "initialDate",
          "finalDate",
          "title",
          "requestLimit",
          "requestPrice",
          "extraPackageRequest",
          "extraPackagePrice",
          "billType",
          "chargeType",
          "rateLimitRequests",
          "rateLimitPeriod",
          "isActive"
        ]
      },
      "CreatePlanDTO": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Plan name",
            "example": "Free Plan"
          },
          "description": {
            "type": "string",
            "description": "Plan description",
            "example": "Free plan with unlimited requests"
          },
          "key": {
            "type": "string",
            "description": "Plan key",
            "example": "free-plan"
          }
        },
        "required": [
          "name",
          "description",
          "key"
        ]
      },
      "CreatePlanWithContractDTO": {
        "type": "object",
        "properties": {
          "plan": {
            "description": "Plan",
            "allOf": [
              {
                "$ref": "#/components/schemas/CreatePlanDTO"
              }
            ]
          },
          "planContracts": {
            "description": "Plan Contract",
            "example": [
              null
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "plan",
          "planContracts"
        ]
      },
      "PlanDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Plan Id",
            "example": "Plan Id"
          },
          "name": {
            "type": "string",
            "description": "Plan Name",
            "example": "Free Plan"
          },
          "key": {
            "type": "string",
            "description": "Plan Key",
            "example": "free-plan"
          },
          "description": {
            "type": "string",
            "description": "Plan Description",
            "example": "Free Plan Description"
          }
        },
        "required": [
          "id",
          "name",
          "key",
          "description"
        ]
      },
      "CreateSubscriptionDTO": {
        "type": "object",
        "properties": {
          "apiKey": {
            "type": "string",
            "description": "API Key",
            "example": "api-key"
          },
          "planName": {
            "type": "string",
            "description": "Plan Name",
            "example": "Plan to be used"
          },
          "userEmail": {
            "type": "string",
            "description": "User Email",
            "example": "user@email.com"
          }
        },
        "required": [
          "apiKey",
          "planName",
          "userEmail"
        ]
      },
      "CreateDeploymentUnitDTO": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Deployment Unit Name",
            "example": "Deployment Unit Name"
          },
          "key": {
            "type": "string",
            "description": "Deployment Unit Key",
            "example": "Deployment Unit Key"
          },
          "description": {
            "type": "string",
            "description": "Deployment Unit Description",
            "example": "Deployment Unit Description"
          },
          "apiKey": {
            "type": "string",
            "description": "Api Key",
            "example": "api-key"
          }
        },
        "required": [
          "name",
          "key",
          "description",
          "apiKey"
        ]
      },
      "GatewayDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Gateway Id",
            "example": "gateway-1"
          },
          "name": {
            "type": "string",
            "description": "API Gateway Name",
            "example": "Google API"
          },
          "cache": {
            "type": "number",
            "description": "API Gateway Cache",
            "example": 300
          },
          "timeOut": {
            "type": "number",
            "description": "API Gateway Timeout Miliseconds",
            "example": 5000
          },
          "encoding": {
            "type": "string",
            "description": "API Gateway Encoding",
            "example": "json"
          },
          "port": {
            "type": "number",
            "description": "API Gateway Port",
            "example": 3890
          },
          "plugins": {
            "type": "string",
            "description": "API Gateway Plugins",
            "example": ""
          },
          "file": {
            "type": "string",
            "description": "API Gateway File",
            "example": "{\n  \"version\": \"3\",\n  \"name\": \"API JOAO\",\n  \"timeout\": \"300ms\",\n  \"cache_ttl\": \"5000s\",\n  \"output_encoding\": \"json\",\n  \"port\": 3890,\n  \"plugin\": null,\n  \"endpoints\": []\n}"
          },
          "enableSecurity": {
            "type": "boolean",
            "description": "API Gateway Enable Security",
            "example": true
          },
          "enablePlugins": {
            "type": "boolean",
            "description": "API Gateway Enable Plugins",
            "example": true
          },
          "jwkUrl": {
            "type": "string",
            "description": "API Gateway JWK URL",
            "example": "https://www.googleapis.com/oauth2/v3/certs"
          },
          "jwkEncoding": {
            "type": "string",
            "description": "API Gateway JWK Encoding",
            "example": "json"
          },
          "jwkDisable": {
            "type": "boolean",
            "description": "API Gateway JWK Disable",
            "example": false
          },
          "gatewaySource": {
            "type": "string",
            "description": "API Gateway",
            "example": "KRAKEND"
          }
        },
        "required": [
          "id",
          "name",
          "cache",
          "timeOut",
          "encoding",
          "port",
          "plugins",
          "file",
          "enableSecurity",
          "enablePlugins",
          "jwkUrl",
          "jwkEncoding",
          "jwkDisable",
          "gatewaySource"
        ]
      },
      "EditDeploymentUnitDTO": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Deployment Unit Name",
            "example": "Deployment Unit Name"
          },
          "key": {
            "type": "string",
            "description": "Deployment Unit Key",
            "example": "Deployment Unit Key"
          },
          "description": {
            "type": "string",
            "description": "Deployment Unit Description",
            "example": "Deployment Unit Description"
          },
          "swaggerAttached": {
            "type": "string",
            "description": "Swagger Attached",
            "example": "swagger.json"
          },
          "fileAttached": {
            "type": "string",
            "description": "Kraken Attached",
            "example": "kraken.json"
          },
          "gateway": {
            "description": "Gateway",
            "example": "{\n  \"name\": \"API JOAO\",\n  \"cache\": 300,\n  \"timeOut\": 5000,\n  \"encoding\": \"json\",\n  \"port\": 3890,\n  \"plugins\": null,\n  \"file\": {\n    \"version\": \"3\",\n    \"name\": \"API JOAO\",\n    \"timeout\": \"300ms\",\n    \"cache_ttl\": \"5000s\",\n    \"output_encoding\": \"json\",\n    \"port\": 3890,\n    \"plugin\": null,\n    \"endpoints\": []\n  }\n}",
            "allOf": [
              {
                "$ref": "#/components/schemas/GatewayDTO"
              }
            ]
          },
          "ciType": {
            "type": "string",
            "description": "Registry Source",
            "example": "KRAKEND"
          },
          "environment": {
            "type": "object",
            "description": "Environment",
            "example": "Development"
          }
        },
        "required": [
          "name",
          "key",
          "description",
          "swaggerAttached",
          "fileAttached",
          "gateway",
          "ciType",
          "environment"
        ]
      },
      "EditGatewayDeploymentUnitDTO": {
        "type": "object",
        "properties": {
          "swaggerAttached": {
            "type": "string",
            "description": "Swagger Attached",
            "example": "swagger.json"
          },
          "fileAttached": {
            "type": "string",
            "description": "Kraken Attached",
            "example": "kraken.json"
          },
          "gateway": {
            "description": "Gateway",
            "example": "{\n  \"name\": \"API JOAO\",\n  \"cache\": 300,\n  \"timeOut\": 5000,\n  \"encoding\": \"json\",\n  \"port\": 3890,\n  \"plugins\": null,\n  \"file\": {\n    \"version\": \"3\",\n    \"name\": \"API JOAO\",\n    \"timeout\": \"300ms\",\n    \"cache_ttl\": \"5000s\",\n    \"output_encoding\": \"json\",\n    \"port\": 3890,\n    \"plugin\": null,\n    \"endpoints\": []\n  }\n}",
            "allOf": [
              {
                "$ref": "#/components/schemas/GatewayDTO"
              }
            ]
          }
        },
        "required": [
          "swaggerAttached",
          "fileAttached",
          "gateway"
        ]
      },
      "EditCiDeploymentUnitDTO": {
        "type": "object",
        "properties": {
          "ciType": {
            "type": "string",
            "description": "Registry Source",
            "example": "KRAKEND"
          },
          "environment": {
            "type": "object",
            "description": "Environment",
            "example": "Development"
          }
        },
        "required": [
          "ciType",
          "environment"
        ]
      },
      "GatewayFileDTO": {
        "type": "object",
        "properties": {
          "file": {
            "type": "string",
            "description": "API Gateway File",
            "example": "{\n  \"version\": \"3\",\n  \"name\": \"API JOAO\",\n  \"timeout\": \"300ms\",\n  \"cache_ttl\": \"5000s\",\n  \"output_encoding\": \"json\",\n  \"port\": 3890,\n  \"plugin\": null,\n  \"endpoints\": []\n}"
          }
        },
        "required": [
          "file"
        ]
      }
    }
  }
}